name: 'Get & Cache Dependencies'
inputs:
  caching: # a custom input value
    description: 'Whether to cache deps or not.'
    required: false
    default: 'true'
outputs:
  used-cache: # a custom output value
    description: 'Whether the cache was used.'
    value: ${{ steps.install.outputs.cache }} # use the output value from 'install' step
runs:
  using: 'composite'
  steps:
    - name: Cache dependencies
      if: inputs.caching == 'true'
      id: cache
      uses: actions/cache@v3
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true' || inputs.caching != 'true'
      id: install # see line with 'echo "cache=...': configure the output value  for key 'cache'
      run: |
        npm ci
        echo "cache=${{ inputs.caching }}" >> $GITHUB_OUTPUT
      shell: bash
description: 'Get the dependencies (via npm) and cache them.
